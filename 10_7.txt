void *
	The dynamic memory functions deal in arbitrary blocks of memory. There is no regular type associated with the block.
	void * is considered to be a pointer to a 1 byte block of memory, so pointer arithmetic will be based on 1.
	Whenever possible you should typecast void * values to the appropriate type.
	If you allocate memory, you should release it when it's done!

	ex. int *ip;
		ip = (int *)malloc(5 * sizeof(int));

Struct
	A collection of values in a single data type
	struct {int a; char x;} s;
		Here, s is a variable of type struct {int a; char x;}
	The size of a struct will be greater than or equal to the space needed .
	struct <prototype> {<types>} <name>;
	struct declarations aren't closed with curly braces; ended with semicolon.
		s.x access data types from within a struct using
		deference and then get x from inside
